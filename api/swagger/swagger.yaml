swagger: "2.0"
info:
  version: "0.0.2"
  title: Cirrus Database API
# during dev, should point to your local machine
host: clients.db.cirrus.io:10083
# basePath prefixes all resource paths
basePath: /v2
#
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/x-www-form-urlencoded
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
  - text/plain
paths:
  /users:
    # binds  app logic to a route
    x-swagger-router-controller: users
    get:
      description: Returns a list of users from the Cirrus DB
      summary: list Users
      operationId: listUsers
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/UserListBody"
        "404":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    post:
      description: Create a new User in the Cirrus DB
      summary: create User
      operationId: createUser
      parameters:
        - name: user
          required: true
          in: body
          description: a new user details
          schema:
            $ref: "#/definitions/User"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/User"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /users/{id}:
    x-swagger-router-controller: users
    get:
      summary: get User by id
      description: Returns a list of users from the Cirrus DB
      operationId: findUserById
      parameters:
        - name: id
          required: true
          in: path
          description: find a user using the Mongo objectId
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/User"
        "406":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      summary: delete User by id
      description: User will be removed from Cirrus DB
      operationId: removeUserById
      parameters:
        - name: id
          required: true
          in: path
          description: remove a user using the mongo objectId
          type: string
      responses:
        "200":
          description: Delete success
        "406":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      summary: update User by id
      description: Update User's information in Cirrus DB
      operationId: updateUserById
      parameters:
        - name: id
          required: true
          in: path
          description: update a user using the mongo objectId
          type: string
        - name: user
          required: true
          in: body
          description: a new user details
          schema:
            $ref: "#/definitions/User"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/User"
        "406":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /users/{id}/device:
    x-swagger-router-controller: device
    get:
      summary: List devices of the user by id
      description: Returns a list of devices linked to the user by id
      operationId: listDevices
      parameters:
        - name: id
          required: true
          in: path
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/DeviceListBody"
        "404":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Add a device to User by id
      summary: Add Device to User by id
      operationId: addDevice
      parameters:
        - name: id
          required: true
          in: path
          type: string
        - name: device
          required: true
          in: body
          description: a new user details
          schema:
            $ref: "#/definitions/Device"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Device"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /users/{id}/device/{device_id}:
    x-swagger-router-controller: device
    get:
      summary: Get Device by User and Device id
      description: Returns a list of users from the Cirrus DB
      operationId: getDeviceById
      parameters:
        - name: id
          required: true
          in: path
          type: string
        - name: device_id
          required: true
          in: path
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/DeviceListBody"
        "404":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      summary: Delete a device by id
      description: Delete a device with id form the user device list
      operationId: removeDevicebyId
      parameters:
        - name: id
          required: true
          in: path
          description: remove a user using the mongo objectId
          type: string
        - name: device_id
          required: true
          in: path
          type: string
      responses:
        "200":
          description: Delete success
        "404":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      summary: update a device information by id
      description: Update User's device information using User and device id
      operationId: updateDeviceById
      parameters:
        - name: id
          required: true
          in: path
          description: update a user using the mongo objectId
          type: string
        - name: device_id
          required: true
          in: path
          type: string
        - name: device
          required: true
          in: body
          description: a new user details
          schema:
            $ref: "#/definitions/Device"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Device"
        "404":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /users/username/{username}:
    x-swagger-router-controller: users
    get:
      description: Returns a list of users from the Cirrus DB
      summary: get User by username
      operationId: findUserByUsername
      parameters:
        - name: username
          required: true
          in: path
          description: find a user by username
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/User"
        # responses may fall through to errors
        "404":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /community:
    # binds  app logic to a route
    x-swagger-router-controller: community
    get:
      description: Returns a list communities from the Cirrus DB
      summary: list Communities
      operationId: listCommunuties
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/CommunityListBody"
        "404":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        # responses may fall through to errors
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Create a new Community in the Cirrus DB
      summary: create Community
      operationId: createCommunity
      parameters:
        - name: community
          required: true
          in: body
          schema:
            $ref: "#/definitions/Community"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Community"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /community/{id}:
    x-swagger-router-controller: community
    get:
      description: Find a Community by Monog ObjectId
      summary: Community by id
      operationId: findCommunityById
      parameters:
        - name: id
          required: true
          in: path
          description: find a user using the mongo objectId
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Community"
        "404":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      description: Update the Community
      summary: update Community by id
      operationId: updateCommunityById
      parameters:
        - name: id
          required: true
          in: path
          description: update a user using the mongo objectId
          type: string
        - name: community
          required: true
          in: body
          description: a new user details
          schema:
            $ref: "#/definitions/Community"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/User"
        "404":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      description: Delete Community by mongo objectId, relations on other collections to this collection are not removed
      summary: Community by id
      operationId: removeCommunityById
      parameters:
        - name: id
          required: true
          in: path
          description: find a user using the mongo objectId
          type: string
      responses:
        "200":
          description: Success
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    patch:
      description: Update a specific field and value in the Community collection referenced by mongo objectId
      summary: partially update Community by id
      operationId: partiallyUpdateCommunityById
      parameters:
        - name: id
          required: true
          in: path
          description: update partially a user's information using the mongo objectId
          type: string
        - name: field
          required: true
          in: query
          description: a valid field in the user's collesction Cirruc Collection
          type: string
        - name: value
          required: true
          in: query
          description: a valid value in the user's collesction Cirruc Collection
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/User"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

# complex objects have schema definitions
definitions:
  UserListBody:
    required:
      - users
    properties:
      users:
        type: array
        items:
          $ref: "#/definitions/User"

  User:
    required:
      - name
      - email
      - username
      - password
      - role
    properties:
      name:
        type: string
      email:
        type: string
      username:
        type: string
      password:
        type: string
      role:
        type: string
      oauth:
        type: array
        items:
          $ref: "#/definitions/OAuth"
      devices:
        type: array
        items:
          $ref: "#/definitions/Device"
      community:
        type: array
        items:
          $ref: "#/definitions/Community"
      created:
        type: string
        format: date

  OAuth:
    required:
      - provider
      - access_token
    properties:
      provider:
        type: string
      access_token:
        type: string

  DeviceListBody:
    required:
      - devices
    properties:
      devices:
        type: array
        items:
          $ref: "#/definitions/Device"

  Device:
    required:
      - name
      - mac
      - type
    properties:
      name:
        type: string
      mac:
        type: string
      type:
        type: string

  CommunityListBody:
    required:
      - communities
    properties:
      communities:
        type: array
        items:
          $ref: "#/definitions/Community"

  Community:
    required:
      - name
      - uuid
      - users
    properties:
      name:
        type: string
      uuid:
        type: string
      users:
        type: array
        items:
          $ref: "#/definitions/User"

  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
