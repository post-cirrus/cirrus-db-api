swagger: "2.0"
info:
  version: "0.0.2"
  title: Cirrus Database API
# during dev, should point to your local machine
host: 192.168.82.103:10083
# basePath prefixes all resource paths
basePath: /v2
#
schemes:
  # tip: remove http to make production-grade
  - http
#  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
  - application/x-www-form-urlencoded
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /users:
    # binds a127 app logic to a route
    x-swagger-router-controller: users
    get:
      description: Returns a list of users from the Cirrus DB
      # used as the method name of the controller
      operationId: list
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/UserListBody"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    post:
      description: Create a new User in the Cirrus DB
      # used as the method name of the controller
      operationId: create
      parameters:
        - name: user
          required: true
          in: body
          description: a new user details
          schema:
            $ref: "#/definitions/User"
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/User"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

# complex objects have schema definitions
definitions:
  UserListBody:
    required:
      - users
    properties:
      users:
        type: array
        items:
          $ref: "#/definitions/User"

  User:
    required:
      - name
      - email
      - username
      - password
      - role
    properties:
      name:
        type: string
      email:
        type: string
      username:
        type: string
      password:
        type: string
      role:
        type: string
      oauth:
        type: array
        items:
          $ref: "#/definitions/oauth"
      devices:
        type: array
        items:
          $ref: "#/definitions/device"
      community:
        type: array
        items:
          $ref: "#/definitions/community"
      created:
        type: string
        format: date

  oauth:
    required:
      - provider
      - access_token
    properties:
      provider:
        type: string
      access_token:
        type: string

  device:
    required:
      - name
      - mac
      - uuid
    properties:
      name:
        type: string
      mac:
        type: string
      uuid:
        type: string

  community:
    required:
      - name
      - uuid
      - users
    properties:
      name:
        type: string
      uuid:
        type: string
      users:
        type: array
        items:
          $ref: "#/definitions/User"

  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
